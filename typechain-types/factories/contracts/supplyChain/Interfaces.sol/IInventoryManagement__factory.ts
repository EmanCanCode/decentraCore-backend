/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IInventoryManagement,
  IInventoryManagementInterface,
} from "../../../../contracts/supplyChain/Interfaces.sol/IInventoryManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "enum IInventoryManagement.MovementType",
        name: "_movementType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
      {
        internalType: "string",
        name: "_note",
        type: "string",
      },
    ],
    name: "updateStock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IInventoryManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IInventoryManagementInterface {
    return new utils.Interface(_abi) as IInventoryManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInventoryManagement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInventoryManagement;
  }
}
