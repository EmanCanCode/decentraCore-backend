/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RealEstate,
  RealEstateInterface,
} from "../../../contracts/realEstate/RealEstate";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000068565b50600380546001600160a01b0319163390811790915560408051602081019091526000815262000062919060019081906200007a565b620008c8565b60026200007682826200063e565b5050565b6001600160a01b038416620000aa57604051632bfa23e760e11b8152600060048201526024015b60405180910390fd5b60408051600180825260208201869052818301908152606082018590526080820190925290620000df600087848487620000e7565b505050505050565b620000f5858585856200014a565b6001600160a01b038416156200014357825133906001036200013357602084810151908401516200012b8389898585896200036d565b5050620000df565b620000df818787878787620004a7565b5050505050565b80518251146200017b5781518151604051635b05999160e01b815260048101929092526024820152604401620000a1565b3360005b835181101562000289576020818102858101820151908501909101516001600160a01b0388161562000236576000828152602081815260408083206001600160a01b038c168452909152902054818110156200020f576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401620000a1565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156200027e576000828152602081815260408083206001600160a01b038b16845290915281208054839290620002789084906200070a565b90915550505b50506001016200017f565b5082516001036200030d5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051620002fd929190918252602082015260400190565b60405180910390a4505062000143565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516200035e92919062000770565b60405180910390a45050505050565b6001600160a01b0384163b15620000df5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620003b49089908990889088908890600401620007ea565b6020604051808303816000875af1925050508015620003f2575060408051601f3d908101601f19168201909252620003ef9181019062000831565b60015b62000460573d80801562000423576040519150601f19603f3d011682016040523d82523d6000602084013e62000428565b606091505b5080516000036200045857604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000a1565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b146200049e57604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000a1565b50505050505050565b6001600160a01b0384163b15620000df5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190620004ee908990899088908890889060040162000864565b6020604051808303816000875af19250505080156200052c575060408051601f3d908101601f19168201909252620005299181019062000831565b60015b6200055d573d80801562000423576040519150601f19603f3d011682016040523d82523d6000602084013e62000428565b6001600160e01b0319811663bc197c8160e01b146200049e57604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000a1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005c657607f821691505b602082108103620005e757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000639576000816000526020600020601f850160051c81016020861015620006185750805b601f850160051c820191505b81811015620000df5782815560010162000624565b505050565b81516001600160401b038111156200065a576200065a6200059b565b62000672816200066b8454620005b1565b84620005ed565b602080601f831160018114620006aa5760008415620006915750858301515b600019600386901b1c1916600185901b178555620000df565b600085815260208120601f198616915b82811015620006db57888601518255948401946001909101908401620006ba565b5085821015620006fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200072c57634e487b7160e01b600052601160045260246000fd5b92915050565b60008151808452602080850194506020840160005b83811015620007655781518752958201959082019060010162000747565b509495945050505050565b60408152600062000785604083018562000732565b828103602084015262000799818562000732565b95945050505050565b6000815180845260005b81811015620007ca57602081850181015186830182015201620007ac565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906200082690830184620007a2565b979650505050505050565b6000602082840312156200084457600080fd5b81516001600160e01b0319811681146200085d57600080fd5b9392505050565b6001600160a01b0386811682528516602082015260a060408201819052600090620008929083018662000732565b8281036060840152620008a6818662000732565b90508281036080840152620008bc8185620007a2565b98975050505050505050565b61164480620008d86000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b14610169578063a22cb46514610194578063a4b645eb146101a7578063b9571e84146101ba578063e985e9c5146101cd578063f242432a146101e057600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c14610101578063162094c4146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004610cfa565b6101f3565b6040519081526020015b60405180910390f35b6100f16100ec366004610d3d565b61021b565b60405190151581526020016100d5565b61011461010f366004610d61565b61026b565b6040516100d59190610dc0565b61013461012f366004610e8a565b61030d565b005b610134610144366004610f64565b61035d565b61015c61015736600461100e565b6103c4565b6040516100d59190611100565b60035461017c906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b6101346101a2366004611113565b610491565b6101346101b536600461114f565b6104a0565b6101346101c83660046111a7565b6104e7565b6100f16101db3660046112ca565b6105be565b6101346101ee3660046112fd565b6105ec565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061024c57506001600160e01b031982166303a24d0760e21b145b8061021557506301ffc9a760e01b6001600160e01b0319831614610215565b600081815260046020526040902080546060919061028890611362565b80601f01602080910402602001604051908101604052809291908181526020018280546102b490611362565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b50505050509050919050565b6003546001600160a01b031633146103405760405162461bcd60e51b81526004016103379061139c565b60405180910390fd5b60008281526004602052604090206103588282611429565b505050565b336001600160a01b038616811480159061037e575061037c86826105be565b155b156103af5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610337565b6103bc868686868661064b565b505050505050565b606081518351146103f55781518351604051635b05999160e01b815260048101929092526024820152604401610337565b6000835167ffffffffffffffff81111561041157610411610dd3565b60405190808252806020026020018201604052801561043a578160200160208202803683370190505b50905060005b845181101561048957602080820286010151610464906020808402870101516101f3565b828281518110610476576104766114e9565b6020908102919091010152600101610440565b509392505050565b61049c3383836106ab565b5050565b6003546001600160a01b031633146104ca5760405162461bcd60e51b81526004016103379061139c565b6104d685858584610741565b6104e0848361030d565b5050505050565b6003546001600160a01b031633146105115760405162461bcd60e51b81526004016103379061139c565b81518451146105625760405162461bcd60e51b815260206004820152601c60248201527f69647320616e642075726973206c656e677468206d69736d61746368000000006044820152606401610337565b61056e8585858461079e565b60005b84518110156103bc576105b685828151811061058f5761058f6114e9565b60200260200101518483815181106105a9576105a96114e9565b602002602001015161030d565b600101610571565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061060d575061060b86826105be565b155b1561063e5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610337565b6103bc86868686866107dc565b6001600160a01b03841661067557604051632bfa23e760e11b815260006004820152602401610337565b6001600160a01b03851661069e57604051626a0d4560e21b815260006004820152602401610337565b6104e0858585858561086a565b6001600160a01b0382166106d45760405162ced3e160e81b815260006004820152602401610337565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661076b57604051632bfa23e760e11b815260006004820152602401610337565b604080516001808252602082018690528183019081526060820185905260808201909252906103bc60008784848761086a565b6001600160a01b0384166107c857604051632bfa23e760e11b815260006004820152602401610337565b6107d660008585858561086a565b50505050565b6001600160a01b03841661080657604051632bfa23e760e11b815260006004820152602401610337565b6001600160a01b03851661082f57604051626a0d4560e21b815260006004820152602401610337565b60408051600180825260208201869052818301908152606082018590526080820190925290610861878784848761086a565b50505050505050565b610876858585856108bd565b6001600160a01b038416156104e057825133906001036108af57602084810151908401516108a8838989858589610ad1565b50506103bc565b6103bc818787878787610bf5565b80518251146108ec5781518151604051635b05999160e01b815260048101929092526024820152604401610337565b3360005b83518110156109f2576020818102858101820151908501909101516001600160a01b038816156109a3576000828152602081815260408083206001600160a01b038c1684529091529020548181101561097c576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610337565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156109e8576000828152602081815260408083206001600160a01b038b168452909152812080548392906109e29084906114ff565b90915550505b50506001016108f0565b508251600103610a735760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a64929190918252602082015260400190565b60405180910390a450506104e0565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ac2929190611520565b60405180910390a45050505050565b6001600160a01b0384163b156103bc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b15908990899088908890889060040161154e565b6020604051808303816000875af1925050508015610b50575060408051601f3d908101601f19168201909252610b4d91810190611593565b60015b610bb9573d808015610b7e576040519150601f19603f3d011682016040523d82523d6000602084013e610b83565b606091505b508051600003610bb157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610337565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b1461086157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610337565b6001600160a01b0384163b156103bc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c3990899089908890889088906004016115b0565b6020604051808303816000875af1925050508015610c74575060408051601f3d908101601f19168201909252610c7191810190611593565b60015b610ca2573d808015610b7e576040519150601f19603f3d011682016040523d82523d6000602084013e610b83565b6001600160e01b0319811663bc197c8160e01b1461086157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610337565b80356001600160a01b0381168114610cf557600080fd5b919050565b60008060408385031215610d0d57600080fd5b610d1683610cde565b946020939093013593505050565b6001600160e01b031981168114610d3a57600080fd5b50565b600060208284031215610d4f57600080fd5b8135610d5a81610d24565b9392505050565b600060208284031215610d7357600080fd5b5035919050565b6000815180845260005b81811015610da057602081850181015186830182015201610d84565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d5a6020830184610d7a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e1257610e12610dd3565b604052919050565b600082601f830112610e2b57600080fd5b813567ffffffffffffffff811115610e4557610e45610dd3565b610e58601f8201601f1916602001610de9565b818152846020838601011115610e6d57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610e9d57600080fd5b82359150602083013567ffffffffffffffff811115610ebb57600080fd5b610ec785828601610e1a565b9150509250929050565b600067ffffffffffffffff821115610eeb57610eeb610dd3565b5060051b60200190565b600082601f830112610f0657600080fd5b81356020610f1b610f1683610ed1565b610de9565b8083825260208201915060208460051b870101935086841115610f3d57600080fd5b602086015b84811015610f595780358352918301918301610f42565b509695505050505050565b600080600080600060a08688031215610f7c57600080fd5b610f8586610cde565b9450610f9360208701610cde565b9350604086013567ffffffffffffffff80821115610fb057600080fd5b610fbc89838a01610ef5565b94506060880135915080821115610fd257600080fd5b610fde89838a01610ef5565b93506080880135915080821115610ff457600080fd5b5061100188828901610e1a565b9150509295509295909350565b6000806040838503121561102157600080fd5b823567ffffffffffffffff8082111561103957600080fd5b818501915085601f83011261104d57600080fd5b8135602061105d610f1683610ed1565b82815260059290921b8401810191818101908984111561107c57600080fd5b948201945b838610156110a15761109286610cde565b82529482019490820190611081565b965050860135925050808211156110b757600080fd5b50610ec785828601610ef5565b60008151808452602080850194506020840160005b838110156110f5578151875295820195908201906001016110d9565b509495945050505050565b602081526000610d5a60208301846110c4565b6000806040838503121561112657600080fd5b61112f83610cde565b91506020830135801515811461114457600080fd5b809150509250929050565b600080600080600060a0868803121561116757600080fd5b61117086610cde565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561119b57600080fd5b610fde89838a01610e1a565b600080600080600060a086880312156111bf57600080fd5b6111c886610cde565b945060208087013567ffffffffffffffff808211156111e657600080fd5b6111f28a838b01610ef5565b9650604089013591508082111561120857600080fd5b6112148a838b01610ef5565b9550606089013591508082111561122a57600080fd5b818901915089601f83011261123e57600080fd5b813561124c610f1682610ed1565b81815260059190911b8301840190848101908c83111561126b57600080fd5b8585015b838110156112a3578035858111156112875760008081fd5b6112958f89838a0101610e1a565b84525091860191860161126f565b509650505060808901359250808311156112bc57600080fd5b505061100188828901610e1a565b600080604083850312156112dd57600080fd5b6112e683610cde565b91506112f460208401610cde565b90509250929050565b600080600080600060a0868803121561131557600080fd5b61131e86610cde565b945061132c60208701610cde565b93506040860135925060608601359150608086013567ffffffffffffffff81111561135657600080fd5b61100188828901610e1a565b600181811c9082168061137657607f821691505b60208210810361139657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b601f821115610358576000816000526020600020601f850160051c8101602086101561140a5750805b601f850160051c820191505b818110156103bc57828155600101611416565b815167ffffffffffffffff81111561144357611443610dd3565b611457816114518454611362565b846113e1565b602080601f83116001811461148c57600084156114745750858301515b600019600386901b1c1916600185901b1785556103bc565b600085815260208120601f198616915b828110156114bb5788860151825594840194600190910190840161149c565b50858210156114d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b8082018082111561021557634e487b7160e01b600052601160045260246000fd5b60408152600061153360408301856110c4565b828103602084015261154581856110c4565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061158890830184610d7a565b979650505050505050565b6000602082840312156115a557600080fd5b8151610d5a81610d24565b6001600160a01b0386811682528516602082015260a0604082018190526000906115dc908301866110c4565b82810360608401526115ee81866110c4565b905082810360808401526116028185610d7a565b9897505050505050505056fea26469706673582212201be6bb5ce7b1a6520cb63b79f2e032e9c68fdb577f089f3cc30b38f45154cd0b64736f6c63430008180033";

type RealEstateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RealEstateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RealEstate__factory extends ContractFactory {
  constructor(...args: RealEstateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RealEstate> {
    return super.deploy(overrides || {}) as Promise<RealEstate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RealEstate {
    return super.attach(address) as RealEstate;
  }
  override connect(signer: Signer): RealEstate__factory {
    return super.connect(signer) as RealEstate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RealEstateInterface {
    return new utils.Interface(_abi) as RealEstateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RealEstate {
    return new Contract(address, _abi, signerOrProvider) as RealEstate;
  }
}
